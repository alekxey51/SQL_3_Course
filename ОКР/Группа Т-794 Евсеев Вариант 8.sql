create database Vova_OKR1
use Vova_OKR1

--I. Создайте и заполните базу данных спортивного клуба. Примечание: не для всех
--отношений указаны ключевые поля. Если они не указаны, их нужно добавить!
--Отношение «Виды спорта» (поле «Название», «Тип» – индивидуальный или парный).
--Отношение «Тренеры» (поля «ФИО», «Вид спорта», «Уровень мастерства» (КМС, МС и т.д.), «Текущий рейтинг»).
--Отношение «Спортсмены»:
--Отношение «Предыдущие тренеры» (поля «Тренер», «Спортсмен», «Дата начала тренировок»). В этой таблице хранится история смены тренеров спортсменами.
--II.Выборка данных:
--? вывести упорядоченные списки спортсменов, которые занимались разными видами спорта, с указанием видов спорта;
--? вывести упорядоченные списки спортсменов, у которых не указан ни домашний, ни мобильный телефон;
--? сформировать запрос на получение данных о переходах спортсменов: спортсмен – тренер – вид спорта – дата начала занятий – дата завершения занятий (или по настоящее время).
--III.Один из запросов задания No2 написать двумя способами и объяснить, какой из вариантов будет работать быстрее и почему.

create table [Вид спорта]
(Название varchar(50) not null,
Тип varchar(50) not null,
constraint PK_1 primary key (Название),
constraint Check_1 check (Тип = 'Индивидуальный' or Тип = 'Парный'))

insert into [Вид спорта] (Название, Тип) values ('Назв1', 'Парный')
insert into [Вид спорта] (Название, Тип) values ('Назв2', 'Парный')
insert into [Вид спорта] (Название, Тип) values ('Назв3', 'Парный')
insert into [Вид спорта] (Название, Тип) values ('Назв4', 'Парный')
insert into [Вид спорта] (Название, Тип) values ('Назв5', 'Парный')
insert into [Вид спорта] (Название, Тип) values ('Назв6', 'Индивидуальный')
insert into [Вид спорта] (Название, Тип) values ('Назв7', 'Индивидуальный')
insert into [Вид спорта] (Название, Тип) values ('Назв8', 'Индивидуальный')
insert into [Вид спорта] (Название, Тип) values ('Назв9', 'Индивидуальный')
insert into [Вид спорта] (Название, Тип) values ('Назв10', 'Индивидуальный')

create table Тренеры
(IDтренер int not null identity,
ФИО varchar(50) not null,
[Вид спорта] varchar(50) not null,
[Уровень мастерства] varchar(50) not null,
[Текущий рейтинг] varchar(50) not null,
constraint PK_2 primary key (IDтренер),
constraint FK_2 foreign key ([Вид спорта]) references [Вид спорта](Название) on delete cascade on update cascade,
constraint Cheack_2 check ([Уровень мастерства] = 'KMC' or [Уровень мастерства] = 'MC'))

insert into Тренеры (ФИО, [Вид спорта], [Уровень мастерства], [Текущий рейтинг])
			 values ('ФИО1' , 'Назв1', 'KMC', 'Рейтинг1'),
					('ФИО2' , 'Назв2', 'KMC', 'Рейтинг2'),
					('ФИО3' , 'Назв3', 'KMC', 'Рейтинг3'),
					('ФИО4' , 'Назв4', 'KMC', 'Рейтинг4'),
					('ФИО5' , 'Назв5', 'KMC', 'Рейтинг5'),
					('ФИО6' , 'Назв6', 'MC', 'Рейтинг6'),
					('ФИО7' , 'Назв7', 'MC', 'Рейтинг7'),
					('ФИО8' , 'Назв8', 'MC', 'Рейтинг8'),
					('ФИО9' , 'Назв9', 'MC', 'Рейтинг9'),
					('ФИО10' , 'Назв10', 'MC', 'Рейтинг10')


create table Спортсмены
([Номер удостоверения] int not null,
ФИО varchar(40) not null,
[Дата рождения] date not null,
Пол varchar(1) not null,
[Уровень мастерства] varchar(7) not null,
Тренер int not null,
[Текущий рейтинг партнера] int not null,
Партнер int not null,
Адрес varchar(40) not null,
[Мобильный телефон] varchar(11) not null,
[Домашний телефон] varchar(11) not null,
constraint PK_3 primary key ([Номер удостоверения]),
constraint FK_1 foreign key (Тренер) references Тренеры(IDтренер) on delete cascade on update cascade,
constraint Cheack_3 check (Пол = 'М' or Пол = 'Ж'),
constraint Cheack_4 check (Тренер <= 999 or Тренер >= 0),
constraint Cheack_5 check ([Текущий рейтинг партнера] <= 9999 or [Текущий рейтинг партнера] >= 0),
constraint Cheack_6 check (Партнер <= 999999 or Партнер >= 0))

insert into Спортсмены ([Номер удостоверения], ФИО, [Дата рождения], Пол, [Уровень мастерства], Тренер, [Текущий рейтинг партнера], Партнер, Адрес, [Мобильный телефон], [Домашний телефон])
						values ( 1, 'ФИо1', '2020-01-10', 'М', 'KMC', 1, 1, 1, 'Адрес1', '+123456', '+123456'),
								( 2, 'ФИо2', '2020-01-10', 'М', 'KMC', 2, 2, 2, 'Адрес2', '+123457', '+123457'),
								( 3, 'ФИо3', '2020-01-10', 'М', 'KMC', 3, 3, 3, 'Адрес3', '+123458', '+123458'),
								( 4, 'ФИо4', '2020-01-10', 'М', 'KMC', 4, 4, 4, 'Адрес4', '+123459', '+123459'),
								( 5, 'ФИо5', '2020-01-10', 'М', 'KMC', 5, 5, 5, 'Адрес5', '+123460', '+123460'),
								( 6, 'ФИо6', '2020-01-10', 'М', 'KMC', 6, 6, 6, 'Адрес6', '+123461', '+123461'),
								( 7, 'ФИо7', '2020-01-10', 'М', 'KMC', 7, 7, 7, 'Адрес7', '+123462', '+123462'),
								( 8, 'ФИо8', '2020-01-10', 'М', 'KMC', 8, 8, 8, 'Адрес8', '+123463', '+123463'),
								( 9, 'ФИо9', '2020-01-10', 'М', 'KMC', 9, 9, 9, 'Адрес9', '+123464', '+123464'),
								( 10, 'ФИо10', '2020-01-10', 'М', 'KMC', 10, 10, 10, 'Адрес10', '+123465', '+123465')

create table [Предыдущий тренер]
(Тренер int not null,
Спортсмен int not null,
[Дата начала тренироваок] date not null,
constraint Fk_3 foreign key (Спортсмен) references Спортсмены([Номер удостоверения]) on delete cascade on update cascade,
constraint Fk_4 foreign key (Тренер) references Тренеры(IDтренер) on delete no action)

insert into [Предыдущий тренер] (Тренер, Спортсмен, [Дата начала тренироваок])
			values(1, 1, '2020-01-10'),
				  (2, 2, '2020-01-10'),
				  (3, 3, '2020-01-10'),
				  (4, 4, '2020-01-10'),
				  (5, 5, '2020-01-10'),
				  (6, 6, '2020-01-10'),
				  (7, 7, '2020-01-10'),
				  (8, 8, '2020-01-10'),
				  (9, 9, '2020-01-10'),
				  (10, 10, '2020-01-10')


